  运算符

3.1赋值运算符

3.1.1简单赋值
  =      var a =10;

3.1.2复合赋值
 如果再等号前面加上加减乘除,就可以完成复合赋值 +=  -=  *=  /=  <<=  >>=
 (后面两个不常用)

3.2 一元运算符
一元运算符是只能操作一个值的运算符,它包括很多,但最常用的就是递增 递减运算符

3.2.1使用方式
      var a = 10;
      a++;
    //等同于:   a +=1;
    console.log(a)//11
3.2.2前值和后置的区别
   a++是先执行表达式后再自增，执行表达式时使用的是a的原值。
   ++a是先自增再执行表达示，执行表达式时使用的是自增后的a。

3.3 关系运算符
    关系运算符分别为: <> <= >= 返回值都是布尔值

3.4相等运算符
==  ===  != !== 返回的都是布尔值 相等和不相等,都是先转换数据类型再比较,全等和不全等,仅比较不转换数据类型
需要注意的是,==不会比较数据类型,===会比较数据类型]

3.5条件运算符(三目运算符)
它允许将简单的if条件判断语句嵌入表达式中
    var a =10;
      var b =20;
    //  a>b? alert("yes"):alert("no");

3.6 逻辑运算符
在运用逻辑运算符之前,需要掌握数据类型的知识,因为所有的逻辑运算符返回值都是布尔值,因此,返回值转换非常重要.

3.6.1 逻辑非  !
逻辑非 : 首先会将 "!" 后面的值转换为布尔值,然后再对其求相反

3.6.2 逻辑与 &
左右两边只有有一个false就是false,两边都是true才是true

3.6.3 逻辑或 |
左右两边有一个true就是true,两边都是false才是false
  
3.6.4 短路与&&
他的运算过程更加高效,只要左边的运算符结果是false那么后面的就不运算了 

